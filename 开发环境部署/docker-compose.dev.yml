version: '3.8'

services:
  # 数据库服务 - 开发环境
  database:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: todolist-database-dev
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=${DB_SA_PASSWORD:-TodoList@2024!Dev}
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
    volumes:
      - db_data_dev:/var/opt/mssql
      - ../Scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    networks:
      - todolist-network-dev
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P ${DB_SA_PASSWORD:-TodoList@2024!Dev} -Q 'SELECT 1'"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # 后端API服务 - 开发环境
  backend:
    build:
      context: ../ApiCode/ToDoListArea/ToDoListArea
      dockerfile: Dockerfile
    container_name: todolist-backend-dev
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5006
      - ConnectionStrings__DefaultConnection=Server=database,1433;Database=ToDoListArea;User Id=sa;Password=${DB_SA_PASSWORD:-TodoList@2024!Dev};TrustServerCertificate=true;
      - JwtSettings__SecretKey=${JWT_SECRET_KEY:-dev-jwt-secret-key-for-development-only-not-secure}
      - JwtSettings__Issuer=${JWT_ISSUER:-ToDoListArea-Dev}
      - JwtSettings__Audience=${JWT_AUDIENCE:-ToDoListArea-Dev-Users}
      - JwtSettings__ExpirationInMinutes=${JWT_EXPIRATION:-120}
    ports:
      - "5006:5006"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - todolist-network-dev
    restart: unless-stopped
    volumes:
      # 开发环境挂载源代码，支持热重载
      - ../ApiCode/ToDoListArea/ToDoListArea:/app/src
      # 挂载开发环境配置文件
      - ./appsettings.Development.json:/app/appsettings.Development.json
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5006/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # 前端服务 - 开发环境
  frontend:
    build:
      context: ../WebCode/todo-frontend
      dockerfile: Dockerfile
      target: development
    container_name: todolist-frontend-dev
    env_file:
      - .env.frontend.development
    environment:
      - NODE_ENV=development
    ports:
      - "5175:5175"  # Vite开发服务器端口
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - todolist-network-dev
    restart: unless-stopped
    volumes:
      # 开发环境挂载源代码，支持热重载
      - ../WebCode/todo-frontend/src:/app/src
      - ../WebCode/todo-frontend/public:/app/public
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5175 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Redis缓存服务 - 开发环境
  redis:
    image: redis:7-alpine
    container_name: todolist-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_data_dev:/data
    networks:
      - todolist-network-dev
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 数据库管理工具 - 仅开发环境
  adminer:
    image: adminer
    container_name: todolist-adminer-dev
    ports:
      - "8080:8080"
    networks:
      - todolist-network-dev
    restart: unless-stopped
    depends_on:
      database:
        condition: service_healthy

volumes:
  db_data_dev:
    driver: local
  redis_data_dev:
    driver: local

networks:
  todolist-network-dev:
    driver: bridge
